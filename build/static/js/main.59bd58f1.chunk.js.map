{"version":3,"sources":["Header.js","Sidebar.js","BalanceBox.js","SmallBox.js","LongBox.js","HorzBox.js","LargeBox.js","AssetsBox.js","App.js","index.js"],"names":["Header","className","Sidebar","Adb","fontSize","color","Announcement","ShowChart","AccountBalance","BalanceBox","props","id","src","image","alt","symbol","title","numeral","currentPrice","format","SmallBox","useState","chartNums","setChartNums","chartLabels","setChartLabels","chartData","setChartData","x","y","fetchData","useCallback","a","fetch","response","json","data","prices","i","length","push","chart","labels","datasets","label","backgroundColor","borderColor","borderWidth","borderJoinStyle","borderCapStyle","pointRadius","pointHitRadius","lineTension","useEffect","percentChange","options","responsive","maintainAspectRatio","text","display","legend","layout","padding","left","right","top","bottom","scales","xAxes","gridLines","yAxes","tooltips","callbacks","displayColors","yPadding","xPadding","position","caretSize","bodyFontSize","bodyFontColor","LongBox","MonetizationOn","HorzBox","buy","buyOrSell","e","target","innerText","setBuy","currentCoin","selectedIndex","setSelectedCoin","setPrice","bitcoinPrice","ethereumPrice","stellarPrice","tetherPrice","value","onClick","onChange","price","type","placeholder","setInputNum","parseInt","inputNum","preventDefault","currentBalance","document","getElementById","style","outlineColor","border","selectedCoin","setBitcoinAssets","bitcoinAssets","setEthereumAssets","ethereumAssets","setStellarAssets","stellarAssets","setTetherAssets","tetherAssets","setCurrentBalance","LargeBox","currentTime","setCurrentTime","setCurrentCoin","selectTime","AssetsBox","current_price","App","loading","setLoading","smallData","setSmallData","then","name","ReactDOM","render"],"mappings":"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","file":"static/js/main.59bd58f1.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(){\n    return(\n        <div className = \"header\">\n            <p>DEMO ACCOUNT</p>\n            <h1>CryptoCASH</h1>\n        </div>\n    )\n};\n\nexport default Header","import React from 'react'\nimport './Sidebar.css';\nimport { Announcement, ShowChart, AccountBalance, Adb } from '@material-ui/icons';\n\n\nfunction Sidebar() {\n    return (\n        <div className=\"sidebar\">\n            <ul>\n                <li className=\"logo\"><Adb fontSize=\"large\" color=\"primary\"/></li>\n                <li className=\"option\"><Announcement fontSize=\"large\"/></li>\n                <li className=\"option active\"><ShowChart fontSize=\"large\"/></li>\n                <li className=\"option\"><AccountBalance fontSize=\"large\"/></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport './SmallBox.css';\nimport numeral from 'numeral'\n\nfunction BalanceBox(props) {\n    return (\n        <div id={props.id} className=\"smallBox\">\n            <div className=\"smallBox_info\">\n                <img className=\"smallBox-icon\" src={props.image} alt={props.symbol}/>\n                <h2>{props.title}</h2>\n            </div>\n            \n            <div className=\"smallBox_numbers\">\n                <h1 className=\"smallBox-price\">$ {numeral(props.currentPrice).format('0,0.00')}</h1>\n            </div>\n            \n            <div className=\"smallBox_graph\">\n                \n            </div>\n        </div>\n    )\n}\n\nexport default BalanceBox\n","import React, { useEffect, useState, useCallback } from 'react';\nimport {Line} from 'react-chartjs-2';\nimport numeral from 'numeral';\nimport './SmallBox.css';\n\nfunction SmallBox(props) {\n    const [chartNums, setChartNums] = useState([])\n    const [chartLabels, setChartLabels] = useState([])\n    const [chartData, setChartData] = useState({})\n\n    const x = [];\n    const y = [];\n\nconst fetchData = useCallback(async () => {\n    const response = await fetch(\n      `https://api.coingecko.com/api/v3/coins/${props.id}/market_chart?vs_currency=usd&days=1`\n    );\n    const data = await response.json();\n    if (data && data.prices) {\n      for (let i = 0; i < data.prices.length; i++) {\n        x.push(data.prices[i][0]);\n        setChartLabels(x);\n      }\n\n      for (let i = 0; i < data.prices.length; i++) {\n        y.push(data.prices[i][1]);\n        setChartNums(y);\n      }\n    }\n    // eslint-disable-next-line \n  }, [props]);\n\n  const chart = useCallback(async () => {\n    await fetchData();\n\n    setChartData({\n      labels: chartLabels,\n      datasets: [\n        {\n          label: \"$\",\n          data: chartNums,\n          backgroundColor: [\"rgba(0,0,0,0.09)\"],\n          borderColor: `${props.color}`,\n          borderWidth: 3,\n          borderJoinStyle: \"round\",\n          borderCapStyle: \"round\",\n          pointRadius: 0,\n          pointHitRadius: 10,\n          lineTension: 0.2\n        }\n      ]\n    });\n  }, [chartNums, chartLabels, fetchData, props.color]);\n\n  useEffect(() => {\n    chart();\n  }, [chart]);\n\n    return (\n        <div id={props.id} className=\"smallBox\">\n            <div className=\"smallBox_info\">\n                <img className=\"smallBox-icon\" src={props.image} alt={props.symbol}/>\n                <h2>{props.title}</h2>\n            </div>\n            \n            <div className=\"smallBox_numbers\">\n                <h2 className=\"smallBox-price\">$ {numeral(props.currentPrice).format('0,0.00')}</h2>\n                <h5 className=\"smallBox-roc\">{props.percentChange}</h5>\n            </div>\n            \n            <div className=\"smallBox_graph\">\n                <Line data={chartData} options={{\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {text: 'ThickBoyz', display: false},\n                    legend: {display: false},\n                    layout: {\n                        padding: {\n                          left: 0,\n                          right: 0,\n                          top: 0,\n                          bottom: 0\n                        }\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: false,\n                          gridLines: {}\n                        }],\n                        yAxes: [{\n                          display: false,\n                          gridLines: {}\n                        }]\n                      },\n                      tooltips: {\n                        callbacks: {\n                          //This removes the tooltip title\n                          title: function() {}\n                       },\n                        //this removes legend color\n                        displayColors: false,\n                        yPadding: 10,\n                        xPadding: 10,\n                        position: 'nearest',\n                        caretSize: 10,\n                        backgroundColor: 'rgba(255,255,255,.9)',\n                        bodyFontSize: 15,\n                        bodyFontColor: '#303030' \n                      },\n                    }}/>  \n            </div>\n        </div>\n    )\n}\n\nexport default SmallBox\n","import React from 'react'\nimport {MonetizationOn } from '@material-ui/icons';\n\nimport './LongBox.css';\n\nfunction LongBox() {\n    return (\n        <div className=\"longBox\">\n            <h2>Recent Activity</h2>\n            <div className=\"longbox_info\">\n                <h3>No Transactions Yet</h3>\n                <MonetizationOn fontSize=\"large\"/>\n                <p>Trades will be displayed here on a real account!</p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default LongBox\n","import React, {useEffect} from 'react'\nimport './HorzBox.css';\nimport numeral from 'numeral'\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\n\nfunction HorzBox(props, {buy}) {\n\n    function unitsChange(e){\n        props.setInputNum(parseInt(e.target.value))\n    }\n\n    function buyOrSell(e){\n        if(e.target.innerText === \"Buy\"){\n            props.setBuy(true)\n        } else {\n            props.setBuy(false)\n        }\n    }\n\n    function currentCoin(e){\n        if(e.target.options.selectedIndex === 1){\n            props.setSelectedCoin('bitcoin');\n            props.setPrice(props.bitcoinPrice)\n        } else if(e.target.options.selectedIndex === 2){\n            props.setSelectedCoin('ethereum');\n            props.setPrice(props.ethereumPrice)\n        } else if(e.target.options.selectedIndex === 3){\n            props.setSelectedCoin('stellar');\n            props.setPrice(props.stellarPrice)\n        } else if(e.target.options.selectedIndex === 4){\n            props.setSelectedCoin('tether');\n            props.setPrice(props.tetherPrice)\n        }\n    }\n\n    function confirm(e){\n        e.preventDefault()\n        if(props.buy){\n            if(props.currentBalance < (props.price * props.inputNum)){\n                document.getElementById('inputBox').style.outlineColor = \"red\"\n                document.getElementById('inputBox').style.border = \"3px solid red\"\n            } else {\n                if(props.selectedCoin === \"bitcoin\"){\n                    props.setBitcoinAssets(props.inputNum + props.bitcoinAssets)\n                } else if (props.selectedCoin === \"ethereum\"){\n                    props.setEthereumAssets(props.inputNum + props.ethereumAssets)\n                } else if (props.selectedCoin === \"stellar\"){\n                    props.setStellarAssets(props.inputNum + props.stellarAssets)\n                } else if (props.selectedCoin === \"tether\"){\n                    props.setTetherAssets(props.inputNum + props.tetherAssets)\n                }\n                props.setCurrentBalance(props.currentBalance - (props.price * props.inputNum))\n                document.getElementById('inputBox').style.outlineColor = \"blue\"\n                document.getElementById('inputBox').style.border = \"1px solid grey\"\n            }\n        } else if (!props.buy) {\n            if(props.selectedCoin === \"bitcoin\" && props.bitcoinAssets < props.inputNum){\n                document.getElementById('inputBox').style.outlineColor = \"red\"\n                document.getElementById('inputBox').style.border = \"3px solid red\"\n            } else if (props.selectedCoin === \"ethereum\" && props.ethereumAssets < props.inputNum){\n                document.getElementById('inputBox').style.outlineColor = \"red\"\n                document.getElementById('inputBox').style.border = \"3px solid red\"\n            } else if (props.selectedCoin === \"stellar\" && props.stellarAssets < props.inputNum){\n                document.getElementById('inputBox').style.outlineColor = \"red\"\n                document.getElementById('inputBox').style.border = \"3px solid red\"\n            } else if (props.selectedCoin === \"tether\" && props.tetherAssets < props.inputNum){\n                document.getElementById('inputBox').style.outlineColor = \"red\"\n                document.getElementById('inputBox').style.border = \"3px solid red\"\n            } else {\n                if(props.selectedCoin === \"bitcoin\"){\n                    props.setBitcoinAssets(props.bitcoinAssets - props.inputNum)\n                } else if (props.selectedCoin === \"ethereum\"){\n                    props.setEthereumAssets(props.ethereumAssets - props.inputNum)\n                } else if (props.selectedCoin === \"stellar\"){\n                    props.setStellarAssets(props.stellarAssets - props.inputNum)\n                } else if (props.selectedCoin === \"tether\"){\n                    props.setTetherAssets(props.tetherAssets - props.inputNum)\n                }\n                props.setCurrentBalance(props.currentBalance + (props.price * props.inputNum))\n                document.getElementById('inputBox').style.outlineColor = \"blue\"\n                document.getElementById('inputBox').style.border = \"1px solid grey\"\n            }   \n        }\n    }\n\n    useEffect(() => {\n        props.setSelectedCoin(\"\")\n        props.setPrice(0.00)\n        // eslint-disable-next-line\n    }, [buy])\n\n    return (\n        <div className=\"horzBox\">\n            <form>\n                <div id=\"buyOrSell\">\n                    <p value=\"buy\" className={props.buy === true ? \"active buy\" : \"buy\"} onClick={buyOrSell}>Buy</p>\n                    <p value=\"sell\" className={props.buy === false ? \"active sell\" : \"sell\"} onClick={buyOrSell}>Sell</p>\n                </div>\n                <div id=\"selections\">\n                {props.buy ? (\n                <div id=\"buyActive\">\n                <p value=\"current\">Balance</p>\n                <SwapHorizIcon />\n                <select id=\"options\" onChange={currentCoin}>\n                    <option value={4}>\n                        Select Coin\n                    </option>\n                    <option value={0}>\n                        Bitcoin\n                    </option>\n                    <option value={1}>\n                        Ethereum\n                    </option>\n                    <option value={2}>\n                        Stellar\n                    </option>\n                    <option value={3}>\n                        Tether\n                    </option>\n                </select>\n                </div>\n                ) : (\n                <div id=\"sellActive\">\n                <select id=\"options\" onChange={currentCoin}>\n                    <option value={4}>\n                        Select Coin\n                    </option>\n                    <option value={0}>\n                        Bitcoin\n                    </option>\n                    <option value={1}>\n                        Ethereum\n                    </option>\n                    <option value={2}>\n                        Stellar\n                    </option>\n                    <option value={3}>\n                        Tether\n                    </option>\n                </select>\n                <SwapHorizIcon />\n                <p value=\"current\">Balance</p>\n                </div>\n                )}\n                </div>\n                <div id=\"horzBox-info\">\n                    <p>Today's Price: <br/> <span>{numeral(props.price).format('0,0.00')}</span></p>\n                    <input id=\"inputBox\" type=\"number\" placeholder=\"1\" onChange={unitsChange}/>\n                    <p> Total Price: <br/> <span>{numeral(props.price * props.inputNum).format('0,0.00')}</span></p>\n                </div>\n                <button id=\"confirm\" onClick={confirm}>Confirm</button>\n            </form>\n\n\n        </div>\n    )\n}\n\nexport default HorzBox\n","import React, { useEffect, useState, useCallback } from 'react';\nimport {Line} from 'react-chartjs-2';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n    const [chartNums, setChartNums] = useState([])\n    const [chartLabels, setChartLabels] = useState([])\n    const [chartData, setChartData] = useState({})\n    const [currentTime, setCurrentTime] = useState(1);\n    const [currentCoin, setCurrentCoin] = useState('bitcoin')\n\n    const x = [];\n    const y = [];\n\n    function selectTime(e){\n        if(e.target.innerText === \"Day\"){\n            setCurrentTime(1);\n        } else if (e.target.innerText === \"Week\") {\n            setCurrentTime(7)\n        } else if (e.target.innerText === \"Month\") {\n            setCurrentTime(30)\n        } else if (e.target.innerText === \"Year\") {\n            setCurrentTime(365)\n        }\n    }\n\n    function selectCoin(e){\n        if(e.target.options.selectedIndex === 0){\n            setCurrentCoin('bitcoin');\n        } else if(e.target.options.selectedIndex === 1){\n            setCurrentCoin('ethereum');\n        } else if(e.target.options.selectedIndex === 2){\n            setCurrentCoin('stellar');\n        } else if(e.target.options.selectedIndex === 3){\n            setCurrentCoin('tether');\n        }\n    }\n\n    \n\n    const fetchData = useCallback(async () => {\n        const response = await fetch(\n          `https://api.coingecko.com/api/v3/coins/${currentCoin}/market_chart?vs_currency=usd&days=${currentTime}`\n        );\n        const data = await response.json();\n        if (data && data.prices) {\n          for (let i = 0; i < data.prices.length; i++) {\n            x.push(data.prices[i][0]);\n            setChartLabels(x);\n          }\n    \n          for (let i = 0; i < data.prices.length; i++) {\n            y.push(data.prices[i][1]);\n            setChartNums(y);\n          }\n        }\n        // eslint-disable-next-line\n      }, [currentCoin, currentTime]);\n\n      const chart = useCallback(async () => {\n        await fetchData();\n    \n        setChartData({\n          labels: chartLabels,\n          datasets: [\n            {\n              label: \"$\",\n              data: chartNums,\n              backgroundColor: [\"rgba(0,0,0,0.09)\"],\n              borderColor: \"black\",\n              borderWidth: 3,\n              borderJoinStyle: \"round\",\n              borderCapStyle: \"round\",\n              pointRadius: 0,\n              pointHitRadius: 10,\n              lineTension: 0.2\n            }\n          ]\n        });\n      }, [chartNums, chartLabels, fetchData]);\n\n    useEffect(() => {\n        chart()\n    }, [chart])\n\n    return (\n        <div className=\"largeBox\">\n            <div className=\"largeBox_info\">\n                <select id=\"options\" onChange={selectCoin}>\n                    <option value=\"btc\" >\n                        Bitcoin\n                    </option>\n                    <option value=\"xzc\">\n                        Ethereum\n                    </option>\n                    <option value=\"trc\">\n                        Stellar\n                    </option>\n                    <option value=\"etc\">\n                        Tether\n                    </option>\n                </select>\n                <h2>Chart</h2>\n            </div>\n\n            <div className=\"largeBox_selectors\">\n                <ul>\n                    <li className={currentTime === 1 ? \"active\" : \"\"} onClick={selectTime}>Day</li>\n                    <li className={currentTime === 7 ? \"active\" : \"\"} onClick={selectTime}>Week</li>\n                    <li className={currentTime === 30 ? \"active\" : \"\"} onClick={selectTime}>Month</li>\n                    <li className={currentTime === 365 ? \"active\" : \"\"} onClick={selectTime}>Year</li>\n                </ul>\n            </div>\n\n            <div className=\"largeBox_graph\">\n                <Line data={chartData} options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    title: {text: 'ThickBoyz', display: false},\n                    legend: {display: false},\n                    layout: {\n                        padding: {\n                          left: 0,\n                          right: 0,\n                          top: 0,\n                          bottom: 0\n                        }\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: false,\n                          gridLines: {}\n                        }],\n                        yAxes: [{\n                          display: false,\n                          gridLines: {}\n                        }]\n                      },\n                      tooltips: {\n                        callbacks: {\n                          //This removes the tooltip title\n                          title: function() {}\n                       },\n                        //this removes legend color\n                        displayColors: false,\n                        yPadding: 10,\n                        xPadding: 10,\n                        position: 'nearest',\n                        caretSize: 10,\n                        backgroundColor: 'rgba(255,255,255,.9)',\n                        bodyFontSize: 15,\n                        bodyFontColor: '#303030' \n                      }\n                    }}/>   \n            </div> \n        </div>\n    )\n}\nexport default LargeBox\n","import React from 'react';\nimport './AssetsBox.css';\nimport numeral from 'numeral'\n\nfunction AssetsBox(props) {\n    return (\n        <div className=\"assetsBox\">\n            <h2>Assets</h2>\n            <div id=\"assets\">\n                <div id=\"assets-header\">\n                    <h3>Currency</h3>\n                    <h3>Total Units</h3>\n                    <h3>Current Total</h3>\n                </div>\n                <div className=\"assets-input\">\n                    <img src={props.data[0].image} alt=\"asset\"/>\n                    <h3 className=\"assets-total\">{props.bitcoinAssets}</h3>\n                    <h3 className=\"assets-price\">$ {numeral(props.data[0].current_price * props.bitcoinAssets).format(\"0,0.00\")}</h3>\n                </div>\n                <div className=\"assets-input\">\n                    <img src={props.data[1].image} alt=\"asset\" />\n                    <h3 className=\"assets-total\">{props.ethereumAssets}</h3>\n                    <h3 className=\"assets-price\">$ {numeral(props.data[1].current_price * props.ethereumAssets).format(\"0,0.00\")}</h3>\n                </div>\n                <div className=\"assets-input\">\n                    <img src={props.data[10].image} alt=\"asset\" />\n                    <h3 className=\"assets-total\">{props.stellarAssets}</h3>\n                    <h3 className=\"assets-price\">$ {numeral(props.data[10].current_price * props.stellarAssets).format(\"0,0.00\")}</h3>\n                </div>\n                <div className=\"assets-input\">\n                    <img src={props.data[3].image} alt=\"asset\" />\n                    <h3 className=\"assets-total\">{props.tetherAssets}</h3>\n                    <h3 className=\"assets-price\">$ {numeral(props.data[3].current_price * props.tetherAssets).format(\"0,0.00\")}</h3>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AssetsBox\n","import React, {useState, useEffect} from 'react';\nimport Header from './Header';\nimport SideBar from './Sidebar';\nimport BalanceBox from './BalanceBox';\nimport SmallBox from './SmallBox';\nimport LongBox from './LongBox';\nimport HorzBox from './HorzBox';\nimport LargeBox from './LargeBox';\nimport AssetsBox from './AssetsBox';\nimport './App.css';\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [smallData, setSmallData] = useState({})\n  const [currentBalance, setCurrentBalance] = useState(50000)\n  const [bitcoinAssets, setBitcoinAssets] = useState(0)\n  const [ethereumAssets, setEthereumAssets] = useState(0)\n  const [stellarAssets, setStellarAssets] = useState(0)\n  const [tetherAssets, setTetherAssets] = useState(0)\n\n  const [inputNum, setInputNum] = useState(0)\n  const [selectedCoin, setSelectedCoin] = useState()\n  const [price, setPrice] = useState()\n  const [buy, setBuy] = useState(true);\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false`)\n    .then(response => response.json())\n    .then(data => {\n      setSmallData(data)\n      setLoading(false)\n    })\n  },[]);\n\n  return (\n    <div className=\"app\">\n\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div className=\"app\"> \n          {/* Header */}\n          <Header />\n          \n          {/* Left SideBar */}\n          <SideBar />\n          \n          {/* BalanceBox - Balance */ }\n          <BalanceBox className=\"balance\" \n            id=\"balance\"\n            currentPrice={currentBalance}\n            color= \"#2ea7e0\"\n            title=\"Balance\"\n            image={smallData[29].image}\n            />\n          \n          {/* SmallBox - Bitcoin */}\n          <SmallBox className=\"bitcoin\" \n            id={smallData[0].id}\n            symbol={smallData[0].symbol}\n            currentPrice={smallData[0].current_price}\n            color= \"#f7931a\"\n            title={smallData[0].name}\n            image={smallData[0].image}\n          />\n        \n          {/* SmallBox - ethereum */}\n          <SmallBox className=\"ethereum\" \n            id={smallData[1].id}\n            symbol={smallData[1].symbol}\n            currentPrice={smallData[1].current_price}\n            color= \"#62688f\"\n            title={smallData[1].name}\n            image={smallData[1].image} \n          />\n          \n          {/* SmallBox - stellar */}\n          <SmallBox className=\"stellar\" \n            id={smallData[10].id}\n            symbol={smallData[10].symbol}\n            currentPrice={smallData[10].current_price}\n            color= \"black\"\n            title={smallData[10].name}\n            image={smallData[10].image} \n          />\n          \n          {/* SmallBox - tether */}\n          <SmallBox className=\"tether\" \n            id={smallData[3].id}\n            symbol={smallData[3].symbol}\n            currentPrice={smallData[3].current_price}\n            color= \"#03ac84\"\n            title={smallData[3].name}\n            image={smallData[3].image} \n          />\n\n          {/* LongBox - Recent Operations */}\n          <LongBox \n            data = {smallData}\n            inputNum = {inputNum}\n            selectedCoin = {selectedCoin}\n            price = {price}\n            buy = {buy}\n          />\n          \n          {/* HorizontalBox - Buy/Sell Coins */}\n          <HorzBox \n          bitcoinPrice={smallData[0].current_price}\n          ethereumPrice={smallData[1].current_price}\n          stellarPrice={smallData[10].current_price}\n          tetherPrice={smallData[3].current_price}\n          setCurrentBalance={setCurrentBalance}\n          currentBalance={currentBalance}\n          setBitcoinAssets={setBitcoinAssets}\n          setEthereumAssets={setEthereumAssets}\n          setStellarAssets={setStellarAssets}\n          setTetherAssets={setTetherAssets}\n          bitcoinAssets={bitcoinAssets}\n          ethereumAssets={ethereumAssets}\n          stellarAssets={stellarAssets}\n          tetherAssets={tetherAssets}\n          inputNum = {inputNum}\n          setInputNum = {setInputNum}\n          selectedCoin = {selectedCoin}\n          setSelectedCoin = {setSelectedCoin}\n          price = {price}\n          setPrice = {setPrice}\n          buy = {buy}\n          setBuy = {setBuy}\n          />\n\n          {/* LargeBox - Graph (BTC) */}\n          <LargeBox />\n\n          {/* AssetBox - Assets*/}\n          <AssetsBox \n            data={smallData}\n            bitcoinAssets={bitcoinAssets}\n            ethereumAssets={ethereumAssets}\n            stellarAssets={stellarAssets}\n            tetherAssets={tetherAssets}\n            />\n        </div>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
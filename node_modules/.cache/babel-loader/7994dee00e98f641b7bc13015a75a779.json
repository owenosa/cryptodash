{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/owenosagiede/Desktop/crypto-dash/src/LargeBox.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chartjs from 'chart.js';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n  var _s = $RefreshSig$();\n\n  const chartConfig = {\n    type: 'bar',\n    data: {// ...\n    },\n    options: {// ...\n    }\n  };\n\n  const Chart = () => {\n    _s();\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    useEffect(() => {\n      if (chartContainer && chartContainer.current) {\n        const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n        setChartInstance(newChartInstance);\n      }\n    }, [chartContainer]);\n\n    const updateDataset = (datasetIndex, newData) => {\n      chartInstance.data.datasets[datasetIndex].data = newData;\n      chartInstance.update();\n    };\n\n    const onButtonClick = () => {\n      const data = [1, 2, 3, 4, 5, 6];\n      updateDataset(0, data);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"largeBox\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(Chart, \"CwF/nK6DtXUWNxD6B1GokMgMcJE=\");\n}\n\n_c = LargeBox;\nexport default LargeBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"LargeBox\");","map":{"version":3,"sources":["/Users/owenosagiede/Desktop/crypto-dash/src/LargeBox.js"],"names":["React","useEffect","useRef","useState","Chartjs","LargeBox","chartConfig","type","data","options","Chart","chartContainer","chartInstance","setChartInstance","current","newChartInstance","updateDataset","datasetIndex","newData","datasets","update","onButtonClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,gBAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAE,KADU;AAEhBC,IAAAA,IAAI,EAAE,CACJ;AADI,KAFU;AAKhBC,IAAAA,OAAO,EAAE,CACP;AADO;AALO,GAApB;;AAUE,QAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,UAAMC,cAAc,GAAGT,MAAM,CAAC,IAAD,CAA7B;AACA,UAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;AAEAF,IAAAA,SAAS,CAAC,MAAM;AACd,UAAIU,cAAc,IAAIA,cAAc,CAACG,OAArC,EAA8C;AAC5C,cAAMC,gBAAgB,GAAG,IAAIX,OAAJ,CAAYO,cAAc,CAACG,OAA3B,EAAoCR,WAApC,CAAzB;AACAO,QAAAA,gBAAgB,CAACE,gBAAD,CAAhB;AACD;AACF,KALQ,EAKN,CAACJ,cAAD,CALM,CAAT;;AAOA,UAAMK,aAAa,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC7CN,MAAAA,aAAa,CAACJ,IAAd,CAAmBW,QAAnB,CAA4BF,YAA5B,EAA0CT,IAA1C,GAAiDU,OAAjD;AACAN,MAAAA,aAAa,CAACQ,MAAd;AACD,KAHH;;AAKE,UAAMC,aAAa,GAAG,MAAM;AAC1B,YAAMb,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAb;AACAQ,MAAAA,aAAa,CAAC,CAAD,EAAIR,IAAJ,CAAb;AACD,KAHD;;AAKF,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GA5BC;;AAXc,KAWRE,KAXQ;AAwCnB;;KAxCQL,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chartjs from 'chart.js';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n    const chartConfig = {\n        type: 'bar',\n        data: {\n          // ...\n        },\n        options: {\n          // ...\n        }\n      };\n      \n      const Chart = () => {\n        const chartContainer = useRef(null);\n        const [chartInstance, setChartInstance] = useState(null);\n      \n        useEffect(() => {\n          if (chartContainer && chartContainer.current) {\n            const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n            setChartInstance(newChartInstance);\n          }\n        }, [chartContainer]);\n\n        const updateDataset = (datasetIndex, newData) => {\n            chartInstance.data.datasets[datasetIndex].data = newData;\n            chartInstance.update();\n          };\n        \n          const onButtonClick = () => {\n            const data = [1, 2, 3, 4, 5, 6];\n            updateDataset(0, data);\n          };\n\n        return (\n            <div className=\"largeBox\">\n                <h1>Hello</h1>\n                {/* <button onClick={onButtonClick}>Randomize!</button>\n                <canvas ref={chartContainer}/>         */}\n            </div>\n        )\n    }\n}\nexport default LargeBox\n"]},"metadata":{},"sourceType":"module"}
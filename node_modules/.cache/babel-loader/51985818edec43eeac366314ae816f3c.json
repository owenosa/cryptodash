{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/owenosagiede/Desktop/crypto-dash/src/LargeBox.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chartjs from 'chart.js';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n  // const chartConfig = {\n  //     type: 'bar',\n  //     data: {\n  //       // ...\n  //     },\n  //     options: {\n  //       // ...\n  //     }\n  //   };\n  //   const Chart = () => {\n  //     const chartContainer = useRef(null);\n  //     const [chartInstance, setChartInstance] = useState(null);\n  //     useEffect(() => {\n  //       if (chartContainer && chartContainer.current) {\n  //         const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n  //         setChartInstance(newChartInstance);\n  //       }\n  //     }, [chartContainer]);\n  //     const updateDataset = (datasetIndex, newData) => {\n  //         chartInstance.data.datasets[datasetIndex].data = newData;\n  //         chartInstance.update();\n  //       };\n  //       const onButtonClick = () => {\n  //         const data = [1, 2, 3, 4, 5, 6];\n  //         updateDataset(0, data);\n  //       };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"largeBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onButtonClick,\n      children: \"Randomize!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n} // }\n\n\n_c = LargeBox;\nexport default LargeBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"LargeBox\");","map":{"version":3,"sources":["/Users/owenosagiede/Desktop/crypto-dash/src/LargeBox.js"],"names":["React","useEffect","useRef","useState","Chartjs","LargeBox","onButtonClick","chartContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,gBAAP;;AAEA,SAASC,QAAT,GAAoB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,GAAG,EAAEC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,C,CACL;;;KAvCSF,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chartjs from 'chart.js';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n    // const chartConfig = {\n    //     type: 'bar',\n    //     data: {\n    //       // ...\n    //     },\n    //     options: {\n    //       // ...\n    //     }\n    //   };\n      \n    //   const Chart = () => {\n    //     const chartContainer = useRef(null);\n    //     const [chartInstance, setChartInstance] = useState(null);\n      \n    //     useEffect(() => {\n    //       if (chartContainer && chartContainer.current) {\n    //         const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n    //         setChartInstance(newChartInstance);\n    //       }\n    //     }, [chartContainer]);\n\n    //     const updateDataset = (datasetIndex, newData) => {\n    //         chartInstance.data.datasets[datasetIndex].data = newData;\n    //         chartInstance.update();\n    //       };\n        \n    //       const onButtonClick = () => {\n    //         const data = [1, 2, 3, 4, 5, 6];\n    //         updateDataset(0, data);\n    //       };\n\n        return (\n            <div className=\"largeBox\">\n                <button onClick={onButtonClick}>Randomize!</button>\n                <canvas ref={chartContainer}/>        \n            </div>\n        )\n    }\n// }\nexport default LargeBox\n"]},"metadata":{},"sourceType":"module"}
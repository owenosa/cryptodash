{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/owenosagiede/Desktop/crypto-dash/src/LargeBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n  _s();\n\n  const [chartNums, setChartNums] = useState([]);\n  const [chartLabels, setChartLabels] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [currentTime, setCurrentTime] = useState(1);\n  const [currentCoin, setCurrentCoin] = useState('bitcoin');\n  const x = [];\n  const y = [];\n\n  function selectTime(e) {\n    if (e.target.innerText === \"Day\") {\n      setCurrentTime(1);\n    } else if (e.target.innerText === \"Week\") {\n      setCurrentTime(7);\n    } else if (e.target.innerText === \"Month\") {\n      setCurrentTime(30);\n    } else if (e.target.innerText === \"Year\") {\n      setCurrentTime(365);\n    }\n  }\n\n  function selectCoin(e) {\n    if (e.target.options.selectedIndex === 0) {\n      setCurrentCoin('Bitcoin');\n    } else if (e.target.options.selectedIndex === 1) {\n      setCurrentCoin('Ethereum');\n    } else if (e.target.options.selectedIndex === 2) {\n      setCurrentCoin('Stellar');\n    } else if (e.target.options.selectedIndex === 3) {\n      setCurrentCoin('Tether');\n    }\n  }\n\n  const fetchData = useCallback(async () => {\n    const response = await fetch(`https://api.coingecko.com/api/v3/coins/${currentCoin}/market_chart?vs_currency=usd&days=${currentTime}`);\n    const data = await response.json();\n\n    if (data && data.prices) {\n      console.log(data.prices);\n\n      for (let i = 0; i < data.prices.length; i++) {\n        x.push(data.prices[i][0]);\n        setChartLabels(x);\n      }\n\n      for (let i = 0; i < data.prices.length; i++) {\n        y.push(data.prices[i][1]);\n        setChartNums(y);\n      }\n    }\n  }, [currentCoin, currentTime]);\n  const chart = useCallback(async () => {\n    await fetchData();\n    setChartData({\n      labels: chartLabels,\n      datasets: [{\n        label: \"$\",\n        data: chartNums,\n        backgroundColor: [\"rgba(0,0,0,0.09)\"],\n        borderColor: \"black\",\n        borderWidth: 3,\n        borderJoinStyle: \"round\",\n        borderCapStyle: \"round\",\n        pointRadius: 0,\n        pointHitRadius: 10,\n        lineTension: 0.2\n      }]\n    });\n  }, [chartNums, chartLabels, fetchData]);\n  useEffect(() => {\n    chart();\n  }, [chart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"largeBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"largeBox_info\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"options\",\n        onChange: selectCoin,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"btc\",\n          children: \"Bitcoin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"xzc\",\n          children: \"Ethereum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"trc\",\n          children: \"Stellar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"etc\",\n          children: \"Tether\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"largeBox_selectors\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: currentTime === 1 ? \"active\" : \"\",\n          onClick: selectTime,\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: currentTime === 7 ? \"active\" : \"\",\n          onClick: selectTime,\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: currentTime === 30 ? \"active\" : \"\",\n          onClick: selectTime,\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: currentTime === 365 ? \"active\" : \"\",\n          onClick: selectTime,\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"largeBox_graph\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          title: {\n            text: 'ThickBoyz',\n            display: false\n          },\n          legend: {\n            display: false\n          },\n          layout: {\n            padding: {\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          },\n          scales: {\n            xAxes: [{\n              display: false,\n              gridLines: {}\n            }],\n            yAxes: [{\n              display: false,\n              gridLines: {}\n            }]\n          },\n          tooltips: {\n            callbacks: {\n              //This removes the tooltip title\n              title: function () {}\n            },\n            //this removes legend color\n            displayColors: false,\n            yPadding: 10,\n            xPadding: 10,\n            position: 'nearest',\n            caretSize: 10,\n            backgroundColor: 'rgba(255,255,255,.9)',\n            bodyFontSize: 15,\n            bodyFontColor: '#303030'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LargeBox, \"CqOXAUkCvcedTpe0NNF7ig/E7FQ=\");\n\n_c = LargeBox;\nexport default LargeBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"LargeBox\");","map":{"version":3,"sources":["/Users/owenosagiede/Desktop/crypto-dash/src/LargeBox.js"],"names":["React","useEffect","useState","useCallback","Line","LargeBox","chartNums","setChartNums","chartLabels","setChartLabels","chartData","setChartData","currentTime","setCurrentTime","currentCoin","setCurrentCoin","x","y","selectTime","e","target","innerText","selectCoin","options","selectedIndex","fetchData","response","fetch","data","json","prices","console","log","i","length","push","chart","labels","datasets","label","backgroundColor","borderColor","borderWidth","borderJoinStyle","borderCapStyle","pointRadius","pointHitRadius","lineTension","responsive","maintainAspectRatio","title","text","display","legend","layout","padding","left","right","top","bottom","scales","xAxes","gridLines","yAxes","tooltips","callbacks","displayColors","yPadding","xPadding","position","caretSize","bodyFontSize","bodyFontColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport {Line} from 'react-chartjs-2';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n    const [chartNums, setChartNums] = useState([])\n    const [chartLabels, setChartLabels] = useState([])\n    const [chartData, setChartData] = useState({})\n    const [currentTime, setCurrentTime] = useState(1);\n    const [currentCoin, setCurrentCoin] = useState('bitcoin')\n\n    const x = [];\n    const y = [];\n\n    function selectTime(e){\n        if(e.target.innerText === \"Day\"){\n            setCurrentTime(1);\n        } else if (e.target.innerText === \"Week\") {\n            setCurrentTime(7)\n        } else if (e.target.innerText === \"Month\") {\n            setCurrentTime(30)\n        } else if (e.target.innerText === \"Year\") {\n            setCurrentTime(365)\n        }\n    }\n\n    function selectCoin(e){\n        if(e.target.options.selectedIndex === 0){\n            setCurrentCoin('Bitcoin');\n        } else if(e.target.options.selectedIndex === 1){\n            setCurrentCoin('Ethereum');\n        } else if(e.target.options.selectedIndex === 2){\n            setCurrentCoin('Stellar');\n        } else if(e.target.options.selectedIndex === 3){\n            setCurrentCoin('Tether');\n        }\n    }\n\n    \n\n    const fetchData = useCallback(async () => {\n        const response = await fetch(\n          `https://api.coingecko.com/api/v3/coins/${currentCoin}/market_chart?vs_currency=usd&days=${currentTime}`\n        );\n        const data = await response.json();\n        if (data && data.prices) {\n          console.log(data.prices);\n          for (let i = 0; i < data.prices.length; i++) {\n            x.push(data.prices[i][0]);\n            setChartLabels(x);\n          }\n    \n          for (let i = 0; i < data.prices.length; i++) {\n            y.push(data.prices[i][1]);\n            setChartNums(y);\n          }\n        }\n      }, [currentCoin, currentTime]);\n\n      const chart = useCallback(async () => {\n        await fetchData();\n    \n        setChartData({\n          labels: chartLabels,\n          datasets: [\n            {\n              label: \"$\",\n              data: chartNums,\n              backgroundColor: [\"rgba(0,0,0,0.09)\"],\n              borderColor: \"black\",\n              borderWidth: 3,\n              borderJoinStyle: \"round\",\n              borderCapStyle: \"round\",\n              pointRadius: 0,\n              pointHitRadius: 10,\n              lineTension: 0.2\n            }\n          ]\n        });\n      }, [chartNums, chartLabels, fetchData]);\n\n    useEffect(() => {\n        chart()\n    }, [chart])\n\n    return (\n        <div className=\"largeBox\">\n            <div className=\"largeBox_info\">\n                <select id=\"options\" onChange={selectCoin}>\n                    <option value=\"btc\" >\n                        Bitcoin\n                    </option>\n                    <option value=\"xzc\">\n                        Ethereum\n                    </option>\n                    <option value=\"trc\">\n                        Stellar\n                    </option>\n                    <option value=\"etc\">\n                        Tether\n                    </option>\n                </select>\n                <h2>Chart</h2>\n            </div>\n\n            <div className=\"largeBox_selectors\">\n                <ul>\n                    <li className={currentTime === 1 ? \"active\" : \"\"} onClick={selectTime}>Day</li>\n                    <li className={currentTime === 7 ? \"active\" : \"\"} onClick={selectTime}>Week</li>\n                    <li className={currentTime === 30 ? \"active\" : \"\"} onClick={selectTime}>Month</li>\n                    <li className={currentTime === 365 ? \"active\" : \"\"} onClick={selectTime}>Year</li>\n                </ul>\n            </div>\n\n            <div className=\"largeBox_graph\">\n                <Line data={chartData} options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    title: {text: 'ThickBoyz', display: false},\n                    legend: {display: false},\n                    layout: {\n                        padding: {\n                          left: 0,\n                          right: 0,\n                          top: 0,\n                          bottom: 0\n                        }\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: false,\n                          gridLines: {}\n                        }],\n                        yAxes: [{\n                          display: false,\n                          gridLines: {}\n                        }]\n                      },\n                      tooltips: {\n                        callbacks: {\n                          //This removes the tooltip title\n                          title: function() {}\n                       },\n                        //this removes legend color\n                        displayColors: false,\n                        yPadding: 10,\n                        xPadding: 10,\n                        position: 'nearest',\n                        caretSize: 10,\n                        backgroundColor: 'rgba(255,255,255,.9)',\n                        bodyFontSize: 15,\n                        bodyFontColor: '#303030' \n                      }\n                    }}/>   \n            </div> \n        </div>\n    )\n}\nexport default LargeBox\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/owenosagiede/Desktop/crypto-dash/src/LargeBox.js\";\nimport React, { useEffect, useRef } from 'react';\nimport Chartjs from 'chart.js';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n  var _s = $RefreshSig$();\n\n  const updateDataset = (datasetIndex, newData) => {\n    chartInstance.data.datasets[datasetIndex].data = newData;\n    chartInstance.update();\n  };\n\n  const onButtonClick = () => {\n    const data = [1, 2, 3, 4, 5, 6];\n    updateDataset(0, data);\n  };\n\n  const chartConfig = {\n    type: 'bar',\n    data: {// ...\n    },\n    options: {// ...\n    }\n  };\n\n  const Chart = () => {\n    _s();\n\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    useEffect(() => {\n      if (chartContainer && chartContainer.current) {\n        const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n        setChartInstance(newChartInstance);\n      }\n    }, [chartContainer]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"largeBox\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(Chart, \"CwF/nK6DtXUWNxD6B1GokMgMcJE=\");\n}\n\n_c = LargeBox;\nexport default LargeBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"LargeBox\");","map":{"version":3,"sources":["/Users/owenosagiede/Desktop/crypto-dash/src/LargeBox.js"],"names":["React","useEffect","useRef","Chartjs","LargeBox","updateDataset","datasetIndex","newData","chartInstance","data","datasets","update","onButtonClick","chartConfig","type","options","Chart","chartContainer","setChartInstance","useState","current","newChartInstance"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,gBAAP;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,aAAa,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC7CC,IAAAA,aAAa,CAACC,IAAd,CAAmBC,QAAnB,CAA4BJ,YAA5B,EAA0CG,IAA1C,GAAiDF,OAAjD;AACAC,IAAAA,aAAa,CAACG,MAAd;AACD,GAHH;;AAKE,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMH,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAb;AACAJ,IAAAA,aAAa,CAAC,CAAD,EAAII,IAAJ,CAAb;AACD,GAHD;;AAKF,QAAMI,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAE,KADU;AAEhBL,IAAAA,IAAI,EAAE,CACJ;AADI,KAFU;AAKhBM,IAAAA,OAAO,EAAE,CACP;AADO;AALO,GAApB;;AAUE,QAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,UAAMC,cAAc,GAAGf,MAAM,CAAC,IAAD,CAA7B;AACA,UAAM,CAACM,aAAD,EAAgBU,gBAAhB,IAAoCC,QAAQ,CAAC,IAAD,CAAlD;AAEAlB,IAAAA,SAAS,CAAC,MAAM;AACd,UAAIgB,cAAc,IAAIA,cAAc,CAACG,OAArC,EAA8C;AAC5C,cAAMC,gBAAgB,GAAG,IAAIlB,OAAJ,CAAYc,cAAc,CAACG,OAA3B,EAAoCP,WAApC,CAAzB;AACAK,QAAAA,gBAAgB,CAACG,gBAAD,CAAhB;AACD;AACF,KALQ,EAKN,CAACJ,cAAD,CALM,CAAT;AAOA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAQ,QAAA,GAAG,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAhBC;;AArBc,KAqBRD,KArBQ;AAsCnB;;KAtCQZ,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chartjs from 'chart.js';\nimport './LargeBox.css';\n\nfunction LargeBox() {\n    const updateDataset = (datasetIndex, newData) => {\n        chartInstance.data.datasets[datasetIndex].data = newData;\n        chartInstance.update();\n      };\n    \n      const onButtonClick = () => {\n        const data = [1, 2, 3, 4, 5, 6];\n        updateDataset(0, data);\n      };\n\n    const chartConfig = {\n        type: 'bar',\n        data: {\n          // ...\n        },\n        options: {\n          // ...\n        }\n      };\n      \n      const Chart = () => {\n        const chartContainer = useRef(null);\n        const [chartInstance, setChartInstance] = useState(null);\n      \n        useEffect(() => {\n          if (chartContainer && chartContainer.current) {\n            const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n            setChartInstance(newChartInstance);\n          }\n        }, [chartContainer]);\n\n        return (\n            <div className=\"largeBox\">\n                <canvas ref={chartContainer}/>        \n            </div>\n        )\n    }\n}\nexport default LargeBox\n"]},"metadata":{},"sourceType":"module"}